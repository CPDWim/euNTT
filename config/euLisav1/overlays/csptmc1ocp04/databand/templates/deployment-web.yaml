---
# Source: databand/templates/deployment-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: databand-web
  labels:
    app: databand
    component: web
    baseComponent: databand-webserver
    chart: databand-1.0.59-4
    release: databand
    heritage: Helm
spec:
  replicas: 2
  minReadySeconds: 30
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: databand
      component: web
      release: databand
  template:
    metadata:
      annotations:
        checksum/config-env: 3109c2a9a50dcf23eb23cd5b7154adb3449d16cbcda947dbcbe23ae8556ea817
        prometheus.io/port: "8090"
        prometheus.io/scrape: "true"
      labels:
        app: databand
        component: web
        baseComponent: databand-webserver
        release: databand
    spec:
      imagePullSecrets:
        - name: regcred.gitlab.databand
      restartPolicy: Always
      containers:
        - name: databand-web
          image: image-registry.openshift-image-registry.svc:5000/databand/dbnd-webserver:python-v1.0.59.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 8090
              protocol: TCP
          envFrom:
            - configMapRef:
                name: "databand-env"
          env:          
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 1200Mi
          volumeMounts:
            - name: dbnd-prom
              mountPath: /dbnd/prom
            - name: dbnd-webapp
              mountPath: /dbnd/webapp
            - name: var-run-dbnd
              mountPath: /var/run/dbnd
            - name: var-tmp
              mountPath: /var/tmp
          args:
            - "bash"
            - "-c"
            - echo 'wait for DB to pass validation...' && dbnd-web db --wait validate --wait-until-pass --timeout-until-pass 3600 && echo 'wait for sync-webapp...' && dbnd-web command sync-webapp --wait --all && echo "executing dbnd-web webserver..." && dbnd-web webserver --port 8090 --pid /var/run/dbnd/dbnd-webserver.pid
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - ls /proc/$(cat /var/run/dbnd/dbnd-webserver.pid)/status
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/health"
              port: web
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 10
      volumes:
        - name: dbnd-prom
          emptyDir: {}
        - name: dbnd-webapp
          emptyDir: {}
        - name: var-run-dbnd
          emptyDir: {}
        - name: var-tmp
          emptyDir: {}
